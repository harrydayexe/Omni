apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-writeapi-deployment
  labels:
    app: {{ .Chart.Name }}-writeapi
spec:
  replicas: {{ .Values.omniwrite.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Chart.Name }}-writeapi
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-writeapi
    spec:
      containers:
        - name: {{ .Chart.Name }}-writeapi
          image: "{{ .Values.omniwrite.image.repository }}:{{ .Values.omniwrite.image.tag }}"
          imagePullPolicy: {{ .Values.omniwrite.image.pullPolicy }}
          ports:
            - containerPort: 80
          env:
            - name: HOST
              value: "{{ .Values.service.host }}"
            - name: PORT
              value: "80"
            - name: DATA_SOURCE_NAME
              value: "{{ .Values.database.username }}:{{ .Values.database.password }}@tcp({{ .Values.database.host }})/{{ .Values.database.database }}?parseTime=true"
            - name: CONNECTION_MAX_LIFETIME
              value: "3"
            - name: MAX_OPEN_CONNECTIONS
              value: "10"
            - name: MAX_IDLE_CONNECTIONS
              value: "10"
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - "ALL"
            runAsNonRoot: true
            seccompProfile:
              type: RuntimeDefault
